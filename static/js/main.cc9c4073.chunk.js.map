{"version":3,"sources":["components/Feedback/Statistics/Statistics.module.css","components/Feedback/Button/Button.module.css","components/Feedback/Statistics/Statistics.js","components/Feedback/Section/Section.js","components/Feedback/Button/Button.js","components/Feedback/FeedbackOptions/FeedbackOptions.js","components/Feedback/Notification/Notification.js","components/Feedback/Feedback.js","App.js","index.js","components/Feedback/Section/Section.module.css","components/Feedback/FeedbackOptions/FeedbackOptions.module.css","components/Feedback/Notification/Notification.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","list","item","number","Section","title","children","section","Button","text","listener","button","type","onClick","FeedbackOptions","options","onLeaveFeedback","OptionsArray","index","Object","keys","map","option","id","shortid","generate","message","container","notification","Counter","state","props","handleFeedBack","feedback","setState","this","percentage","countTotalFeedback","isNaN","Number","toFixed","min","max","rand","Math","random","round","randomInteger","countPositiveFeedbackPercentage","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc9c4073.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3pMQS\",\"item\":\"Statistics_item__RqDPS\",\"number\":\"Statistics_number__krgy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__33Rv2\"};","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <ul className={s.list}>\n        <li key=\"1\" className={s.item}>\n          Good: <span className={s.number}>{good}</span>\n        </li>\n        <li key=\"2\" className={s.item}>\n          Neutral: <span className={s.number}>{neutral}</span>\n        </li>\n        <li key=\"3\" className={s.item}>\n          Bad: <span className={s.number}>{bad}</span>\n        </li>\n        <li key=\"4\" className={s.item}>\n          Total: <span className={s.number}>{total}</span>\n        </li>\n        <li key=\"5\" className={s.item}>\n          PositivePercentage:{' '}\n          <span className={s.number}>{positivePercentage}%</span>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ text, listener }) {\n  return (\n    <button className={s.button} type=\"button\" onClick={listener}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  listener: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\nimport shortid from 'shortid';\nimport Button from '../Button/Button';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback, index }) {\n  const OptionsArray = Object.keys(options);\n  return (\n    <>\n      <ul className={s.list}>\n        {OptionsArray.map(option => {\n          const id = shortid.generate();\n          return (\n            <li key={id} className={s.item}>\n              <Button text={option} listener={() => onLeaveFeedback(option)} />\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n  index: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Section({ message }) {\n  return (\n    <div className={s.container}>\n      <span className={s.notification}>{message}</span>\n    </div>\n  );\n}\n\nSection.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Section from './Section/Section';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Notification from './Notification/Notification';\r\n\r\nexport default class Counter extends Component {\r\n  state = {\r\n    ...this.props.state,\r\n  };\r\n\r\n  handleFeedBack = feedback => {\r\n    this.setState(state => {\r\n      return { [feedback]: state[feedback] + 1 };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    return total;\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    const percentage = (this.state.good * 100) / this.countTotalFeedback();\r\n    if (isNaN(percentage)) return;\r\n    return Number(percentage).toFixed();\r\n  }\r\n\r\n  randomInteger(min, max) {\r\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\r\n    return Math.round(rand);\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Section title={'Please leave feedback'}>\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.handleFeedBack}\r\n            index={this.randomInteger}\r\n          />\r\n        </Section>\r\n\r\n        <Section title={'Statistics'}>\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import Feedback from './components/Feedback';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Feedback state={{ good: 0, neutral: 0, bad: 0 }} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3jAl-\",\"title\":\"Section_title__3czO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__135V_\",\"item\":\"FeedbackOptions_item__1WSJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2Azyd\",\"notification\":\"Notification_notification__VPBcH\"};"],"sourceRoot":""}