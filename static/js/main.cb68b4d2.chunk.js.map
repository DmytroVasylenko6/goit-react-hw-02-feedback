{"version":3,"sources":["components/Feedback/Statistics/Statistics.module.css","components/Feedback/Section/Section.module.css","components/Feedback/FeedbackOptions/FeedbackOptions.module.css","components/Feedback/Notification/Notification.module.css","components/Feedback/Button/Button.module.css","components/Feedback/Statistics/Statistics.js","components/Feedback/Section/Section.js","components/Feedback/Button/Button.js","components/Feedback/FeedbackOptions/FeedbackOptions.js","components/Feedback/Notification/Notification.js","components/Feedback/index.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","list","item","number","Section","title","children","section","Button","text","listener","button","type","onClick","FeedbackOptions","options","onLeaveFeedback","index","OptionsArray","Object","keys","map","option","random","message","container","notification","randomInteger","min","max","rand","Math","round","Counter","state","handleFeedBack","feedback","setState","this","percentage","countTotalFeedback","isNaN","Number","toFixed","countPositiveFeedbackPercentage","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb68b4d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3pMQS\",\"item\":\"Statistics_item__RqDPS\",\"number\":\"Statistics_number__krgy_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3jAl-\",\"title\":\"Section_title__3czO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__135V_\",\"item\":\"FeedbackOptions_item__1WSJF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2Azyd\",\"notification\":\"Notification_notification__VPBcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__33Rv2\"};","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <ul className={s.list}>\n        <li key=\"1\" className={s.item}>\n          Good: <span className={s.number}>{good}</span>\n        </li>\n        <li key=\"2\" className={s.item}>\n          Neutral: <span className={s.number}>{neutral}</span>\n        </li>\n        <li key=\"3\" className={s.item}>\n          Bad: <span className={s.number}>{bad}</span>\n        </li>\n        <li key=\"4\" className={s.item}>\n          Total: <span className={s.number}>{total}</span>\n        </li>\n        <li key=\"5\" className={s.item}>\n          PositivePercentage:{' '}\n          <span className={s.number}>{positivePercentage}%</span>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.object,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ text, listener }) {\n  return (\n    <button className={s.button} type=\"button\" onClick={listener}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  listener: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\nimport Button from '../Button/Button';\n\nexport default function FeedbackOptions({ options, onLeaveFeedback, index }) {\n  const OptionsArray = Object.keys(options);\n  return (\n    <>\n      <ul className={s.list}>\n        {OptionsArray.map(option => {\n          return (\n            <li key={index.random(1, 1000)} className={s.item}>\n              <Button text={option} listener={() => onLeaveFeedback(option)} />\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n  index: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Section({ message }) {\n  return (\n    <div className={s.container}>\n      <span className={s.notification}>{message}</span>\n    </div>\n  );\n}\n\nSection.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Notification from './Notification/Notification';\n\nconst randomInteger = {\n  random(min, max) {\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n  },\n};\n\nexport default class Counter extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedBack = feedback => {\n    this.setState(state => {\n      return { [feedback]: state[feedback] + 1 };\n    });\n  };\n\n  countTotalFeedback() {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const percentage = (this.state.good * 100) / this.countTotalFeedback();\n    if (isNaN(percentage)) return;\n    return Number(percentage).toFixed();\n  }\n\n  render() {\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleFeedBack}\n            index={randomInteger}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import Feedback from './components/Feedback';\n\nfunction App() {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}